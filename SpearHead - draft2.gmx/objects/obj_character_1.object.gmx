<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_character_stance</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
image_speed = 0.45;
crouch = false;
grav = 6;
hsp = 0;
vsp = 0;
jumpspeed = 35;
movespeed = 25;
ladder = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///////////////////////////////////////////////////Imput
//Get input
key_right = keyboard_check(ord("D"));
key_left = -keyboard_check(ord("A"));
key_jump = keyboard_check_pressed(vk_space);
key_up = keyboard_check_direct(vk_space);
key_down = keyboard_check_direct(ord("S"));
shoot = keyboard_check_pressed(ord("E"));
//React to inputs

////////////////////////////////////////Shooting
if (shoot)
{
    if (!ladder)
    {
        if (crouch)
        {
            bullet = instance_create(x,y+25,obj_bullet_1);
            bullet.direction = image_angle;
            bullet.image_angle = image_angle;
            bullet.speed = 15;
        }
        else
        {
            bullet = instance_create(x,y,obj_bullet_1);
            bullet.direction = image_angle;
            bullet.image_angle = image_angle;
            bullet.speed = 15;
        }
    }
    
}
////////////////////////////////////////Movment
move = key_left + key_right;
hsp = move * movespeed;
if (vsp &lt; 10) vsp += grav;
//jump check
if (place_meeting(x,y+1,obj_platform))
{
    vsp = key_jump * -jumpspeed;
    
}
//Ladder
if (key_up || key_down)
{
    if place_meeting(x,y,obj_latter) ladder = true;
}

if (key_jump) &amp;&amp; (place_meeting(x+1,y,obj_platform) || place_meeting(x-1,y,obj_platform))
{
    vsp = - jumpspeed;
}


if (ladder)
{
    vsp = 0;
    if (key_up) vsp = -17;
    if (key_down) vsp = 17;
    if !place_meeting(x,y,obj_latter) ladder = false;
}

///////////////////////////////////////////////Collition
//Horizontal
if (place_meeting(x+hsp,y,obj_platform))
{
    while(!place_meeting(x+sign(hsp),y,obj_platform))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
//Vertical
if (place_meeting(x,y+vsp,obj_platform))
{
    while(!place_meeting(x,y+sign(vsp),obj_platform))
    {
        y += sign(vsp);
    }
    vsp = 0
}
// x and y update
x += hsp;
y += vsp;
////////////////////////////////////////////////Animation
// running/crouch
if (move !=0) {image_xscale = move;} 
if(place_meeting(x,y+1,obj_platform))
{
    if(move != 0)
    {
        crouch = false;
        sprite_index = spr_character_run;
        
    }
    else
    {
        if(keyboard_check_direct(ord("S")))
        {
            sprite_index = spr_character_duck;
            crouch = true;
        }
        else
        {   
            sprite_index = spr_character_stance;
            crouch = false;
        }
    } 
}
//jumping
else
{
    if (vsp &lt; 0) sprite_index = spr_character_jump; else sprite_index = spr_character_jump;
}
//ladder
if (ladder)
{
    if (vsp != 0) sprite_index = spr_character_climb; else sprite_index = spr_character_notclimb;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
